###################### Metricbeat Configuration Example #######################

# This file is an example configuration file highlighting only the most common
# options. The metricbeat.full.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/metricbeat/index.html

#==========================  Modules configuration ============================
metricbeat.modules:
{% for module,module_section in modules.iteritems() %}
- module: {{module}}
  metricsets: {{ module_section.metricsets|to_yaml }}
  enabled: true
  period: {{ METRICBEAT_PERIOD_IN_SECONDS }}s
  processes: ['.*']
{% if module_section.hosts is defined %}
  hosts: [{% for host in module_section.hosts %}"{{host}}"{% if loop.last != True %},{% endif %}{% endfor %}]
{% endif %}

# additional settings
{% if module_section.additional_settings is not none %}
  {%- for additional_setting,additional_setting_section in module_section.additional_settings.iteritems() %}
  {{ additional_setting }}: {{additional_setting_section}}
{% endfor %}
{% endif %}
{% endfor %}



#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging

#================================ Outputs =====================================

# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.

{% if elasticsearch_cluster_metrics_nodes is defined %}
#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: 
{% for host in elasticsearch_cluster_metrics_nodes %}
   - {{ host }}
{% endfor %}

  template.name: "metricbeat-template-es2x"
  template.path: "metricbeat.template-es2x.json"
  template.overwrite: false

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"
{% endif %}

{% if kafka_cluster_metrics_nodes is defined %}
#----------------------------- Kafka Output -----------------------------------
output.kafka:
  # Array of hosts to connect to.
  hosts:
{% for host in kafka_cluster_metrics_nodes %}
    - {{ host }}
{% endfor %}

  topic: '{{ kafka_topic_name }}'
  partition.round_robin:
    reachable_only: false

  required_acks: 1
  compression: gzip
  max_message_bytes: 1000000
{% endif %}

#----------------------------- Logstash output --------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional TLS. By default is off.
  # List of root certificates for HTTPS server verifications
  #tls.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for TLS client authentication
  #tls.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #tls.certificate_key: "/etc/pki/client/cert.key"

#================================ Logging =====================================

# Sets log level. The default log level is error.
# Available log levels are: critical, error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]
logging.level: warning
logging.to_files: true
logging.to_syslog: false
logging.files:
  path: {{METRICBEAT_LOGS_DIR}}
  name: metricbeat.log
  keepfiles: 2
